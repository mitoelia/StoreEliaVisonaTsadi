<html xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:MSHelp="http://msdn.microsoft.com/mshelp" xmlns:mshelp="http://msdn.microsoft.com/mshelp" xmlns:ddue="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:msxsl="urn:schemas-microsoft-com:xslt"><head><META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=UTF-8" /><META NAME="save" CONTENT="history" /><title>Utilizzo di una stored procedure con parametri di output</title><meta name="Language" content="it-it" /><meta name="Microsoft.Help.Id" content="1c006f27-7e99-43d5-974c-7b782659290c" /><meta name="Description" content="Una stored procedure SQL Server che è possibile chiamare è una procedura che restituisce uno o più parametri OUT, ovvero parametri utilizzati dalla stored procedure per restituire i dati all'applicazione di chiamata." /><meta name="Microsoft.Help.ContentType" content="Concepts" /><link rel="stylesheet" type="text/css" href="../local/Classic.css" /><script type="text/javascript" src="../scripts/EventUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/SplitScreen.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/Dropdown.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_manifold.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/script_feedBack.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CheckboxMenu.js">&amp;nbsp;</script><script type="text/javascript" src="../scripts/CommonUtilities.js">&amp;nbsp;</script><script type="text/javascript" src="../local/script_main.js">&amp;nbsp;</script></head><body><div id="header"><table id="bottomTable" cellpadding="0" cellspacing="0"><tr><td align="left"><span id="headerBold">Utilizzo di una stored procedure con parametri di output</span></td></tr></table><table id="gradientTable"><tr><td class="nsrBottom" background="../icons/gradient.gif" /></tr></table></div><div id="mainSection"><div id="mainBody"><div class="introduction"><p>Una stored procedure SQL Server che è possibile chiamare è una procedura che restituisce uno o più parametri OUT, ovvero parametri utilizzati dalla stored procedure per restituire i dati all'applicazione di chiamata. Tramite Microsoft JDBC Driver per SQL Server viene fornita la classe <a href="30710a63-c05d-47d9-9cf9-c087a1c76373.htm">SQLServerCallableStatement</a>, che è possibile utilizzare per chiamare questo tipo di stored procedure ed elaborare i dati restituiti.</p><p>Quando si chiama questo tipo di stored procedure utilizzando il driver JDBC, è necessario utilizzare la sequenza di escape SQL <span class="code"> call </span> insieme al metodo <a href="265b024c-898a-4bd0-98b5-f06076717b9e.htm">prepareCall</a> della classe <a href="937292a6-1525-423e-a2b2-a18fd34c2893.htm">SQLServerConnection</a>. La sintassi della sequenza di escape <span class="code">call</span> con parametri OUT è la seguente:</p><p><span class="code">{call procedure-name[([parameter][,[parameter]]...)]}</span></p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>Per ulteriori informazioni sulle sequenze di escape SQL, vedere <span sdata="link"><a href="00f9e25a-088e-4ac6-aa75-43eacace8f03.htm">Utilizzo delle sequenze di escape SQL</a></span>.</p></div><p>Quando si costruisce la sequenza escape <span class="code"> call </span>, specificare i parametri OUT utilizzando il carattere ? (punto interrogativo), che funge da segnaposto per i valori di parametro che verranno restituiti dalla stored procedure. Per specificare il valore di un parametro OUT, è necessario specificare il tipo di dati di ciascun parametro utilizzando il metodo <a href="82f8d608-efc1-4af8-a985-ec25d19420aa.htm">registerOutParameter</a> della classe <b>SQLServerCallableStatement</b> prima di eseguire la stored procedure. </p><p>Il valore specificato per il parametro OUT nel metodo <b>registerOutParameter</b> deve essere uno dei tipi di dati JDBC contenuti in java.sql.Types, che a sua volta corrisponde a uno dei tipi nativi di dati SQL Server. Per ulteriori informazioni sui tipi di dati JDBC e SQL Server, vedere <span sdata="link"><a href="7802328d-4d23-4775-9573-4169b127d258.htm">Informazioni sui tipi di dati del driver JDBC</a></span>.</p><p>Quando si passa un valore al metodo <b>registerOutParameter</b> per un parametro OUT, è necessario specificare non solo il tipo di dati da utilizzare per il parametro, ma anche la posizione ordinale o il nome del parametro nella stored procedure. Ad esempio, se la stored procedure contiene un unico parametro OUT, il valore ordinale sarà 1. Se la stored procedure contiene due parametri, il primo valore ordinale sarà 1 e il secondo sarà 2.</p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>Il driver JDBC non supporta l'uso dei tipi di dati SQL Server CURSOR, SQLVARIANT, TABLE e TIMESTAMP come parametri OUT.</p></div><p>Come esempio, viene creata la seguente stored procedure nel database di esempio AdventureWorks di SQL Server 2005:</p><div class="sampleCode"><span codeLanguage="other"><pre>CREATE PROCEDURE GetImmediateManager
   @employeeID INT,
   @managerID INT OUTPUT
AS
BEGIN
   SELECT @managerID = ManagerID 
   FROM HumanResources.Employee 
   WHERE EmployeeID = @employeeID
END</pre></span></div><p>Questa stored procedure restituisce un unico parametro OUT (managerID), che è rappresentato da un numero intero, in base al parametro IN specificato (employeeID), anch'esso rappresentato da un numero intero. Il valore restituito nel parametro OUT è ManagerID, a sua volta basato sul valore EmployeeID contenuto nella tabella HumanResources.Employee. </p><p>Nell'esempio seguente viene passata alla funzione una connessione aperta al database di esempio AdventureWorks e il metodo <a href="e1367f39-23d7-4e26-b160-6d988d7e6988.htm">execute</a> viene utilizzato per la chiamata alla stored procedure GetImmediateManager:</p><div class="sampleCode"><span codeLanguage="other"><pre>public static void executeStoredProcedure(Connection con) {
   try {
      CallableStatement cstmt = con.prepareCall("{call dbo.GetImmediateManager(?, ?)}");
      cstmt.setInt(1, 5);
      cstmt.registerOutParameter(2, java.sql.Types.INTEGER);
      cstmt.execute();
      System.out.println("MANAGER ID: " + cstmt.getInt(2));
   }
   catch (Exception e) {
      e.printStackTrace();
   }
}</pre></span></div><p>In questo esempio vengono utilizzate le posizioni ordinali per identificare i parametri. In alternativa, è possibile identificare un parametro utilizzando il relativo nome anziché la posizione ordinale. Nell'esempio di codice seguente viene modificato l'esempio precedente per illustrare l'utilizzo di parametri denominati in un'applicazione Java. Si noti che i nomi dei parametri corrispondono ai nomi dei parametri nella definizione della stored procedure:</p><div class="sampleCode"><span codeLanguage="other"><pre>public static void executeStoredProcedure(Connection con) {
   try {
      CallableStatement cstmt = con.prepareCall("{call dbo.GetImmediateManager(?, ?)}");
      cstmt.setInt("employeeID", 5);
      cstmt.registerOutParameter("managerID", java.sql.Types.INTEGER);
      cstmt.execute();
      System.out.println("MANAGER ID: " + cstmt.getInt("managerID"));
      cstmt.close();
   }
   catch (Exception e) {
      e.printStackTrace();
   }</pre></span></div><p>}</p><div style="margin: .5em 1.5em .5em 1.5em"><b></b><p>In questi esempi per eseguire la stored procedure viene utilizzato il metodo <b>execute</b> della classe <b>SQLServerCallableStatement</b>, in quanto la stored procedure non ha restituito alcun set di risultati. In caso contrario, si utilizzerebbe il metodo <a href="599cf463-e19f-4baa-bacb-513cad7c6cd8.htm">executeQuery</a>.</p></div><p>Le stored procedure possono restituire conteggi aggiornamenti e più set di risultati. Microsoft JDBC Driver per SQL Server è conforme alla specifica JDBC 3.0, in cui viene stabilito che più set di risultati e i conteggi aggiornamenti devono essere recuperati prima del recupero dei parametri OUT. Questo significa che l'applicazione deve recuperare tutti i conteggi aggiornamenti e gli oggetti <b>ResultSet</b> prima di recuperare i parametri OUT utilizzando i metodi <b>CallableStatement.getter</b>. In caso contrario, i conteggi aggiornamenti e gli oggetti <b>ResultSet</b> che non sono già stati recuperati verranno persi quando vengono recuperati i parametri OUT. Per ulteriori informazioni su conteggi aggiornamenti e più set di risultati, vedere <span sdata="link"><a href="64cf4877-5995-4bfc-8865-b7618a5c8d01.htm">Utilizzo di una stored procedure con i conteggi di aggiornamento</a></span> e <span sdata="link"><a href="ab6a3cfa-073b-44e9-afca-a8675cfe5fd1.htm">Utilizzo di più set di risultati</a></span>.</p></div><span id="seeAlsoSpan"><h1 class="heading">Vedere anche</h1></span><div id="seeAlsoSection" class="section" name="collapseableSection" style=""><div class="seeAlsoStyle"><span sdata="link"><a href="0041f9e1-09b6-4487-b052-afd636c8e89a.htm">Utilizzo delle istruzioni con le stored procedure</a></span></div></div></div><div id="footer" class="section"><span id="feedbackarea">Inviare <a href="javascript:SubmitFeedback('DevDocs@Microsoft.com','','','','8.0.12060.10000','%0\dThank%20you%20for%20your%20feedback.%20The%20developer%20writing%20teams%20use%20your%20feedback%20to%20improve%20documentation.%20While%20we%20are%20reviewing%20your%20feedback,%20we%20may%20send%20you%20e-mail%20to%20ask%20for%20clarification%20or%20feedback%20on%20a%20solution.%20We%20do%20not%20use%20your%20e-mail%20address%20for%20any%20other%20purpose%20and%20we%20delete%20it%20after%20we%20finish%20our%20review.%0\AFor%20further%20information%20about%20the%20privacy%20policies%20of%20Microsoft,%20please%20see%20http://privacy.microsoft.com/it-it/default.aspx.%0\A%0\d','Customer%20Feedback');">commenti e suggerimenti</a> su questo argomento a Microsoft.</span><span id="copyrightarea"><p><a href="9bad553b-9e70-4696-8499-2e35f772a1e0.htm">© 2012 Microsoft. Tutti i diritti sono riservati.</a></p></span></div></div></body></html>